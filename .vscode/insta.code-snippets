{
	// Place your Competitive-Programming workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Competitive Programming Template": {
        "scope": "cpp",
        "prefix": "insta",
        "body": [
            "#include<bits/stdc++.h>",
            "using namespace std;",
            "",
            "#define DEBUG(x) cout << '>' << #x << ':' << x << endl;", 
            "#define range(i,n) for(int i=0;i<(n);i++)", 
            "#define FOR(i,a,b) for(int i=(a);i<=(b);i++)",
            "#define input(n, arr) for(int i = 0; i < (n); ++i) cin >> (arr)[i];",
            "",
            "const int INF = 1<<29;", 
            "typedef long long ll;",
            "",
            "",
            "void solve(){",
			"",
            "   int n;cin>>n;",
            "   $0",
            "",
            "}",
            "",
            "int main(){",
            "  ios_base::sync_with_stdio(0);cin.tie(0); cout.tie(0);",
            "",
            "  int t=1;",
            "  cin>>t;",
            "  for(int i=0;i<t;i++){",
            "    solve();",
            "  }",
            "}"
        ],
        "description": "Competitive Programming Template",
}